#spring.security.user.name=yogi
#spring.security.user.password=admin
#spring.security.user.roles=manager

#security.basic.enabled=false

# SECURITY OAUTH2 CLIENT (OAuth2ClientProperties)
#security.oauth2.client.client-id= # OAuth2 client id.
#security.oauth2.client.client-secret= # OAuth2 client secret. A random secret is generated by default

# SECURITY OAUTH2 RESOURCES (ResourceServerProperties)
# security.oauth2.resource.id= # Identifier of the resource.
# security.oauth2.resource.jwt.key-uri= # The URI of the JWT token. Can be set if the value is not available and the key is public.
# security.oauth2.resource.jwt.key-value= # The verification key of the JWT token. Can either be a symmetric secret or PEM-encoded RSA public key.
# security.oauth2.resource.jwk.key-set-uri= # The URI for getting the set of keys that can be used to validate the token.
# security.oauth2.resource.prefer-token-info=true # Use the token info, can be set to false to use the user info.
# security.oauth2.resource.service-id=resource #
# security.oauth2.resource.token-info-uri= # URI of the token decoding endpoint.
# security.oauth2.resource.token-type= # The token type to send when using the userInfoUri.
# security.oauth2.resource.user-info-uri= # URI of the user endpoint.

# SECURITY OAUTH2 SSO (OAuth2SsoProperties)
# security.oauth2.sso.login-path=/login # Path to the login page, i.e. the one that triggers the redirect to the OAuth2 Authorization Server

spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017 
spring.data.mongodb.database=admin
spring.data.mongodb.username=yogi
spring.data.mongodb.password=admin

#spring.data.mongodb.uri=mongodb://yogi:admin@localhost:27017/admin
#logging.level.root=DEBUG

logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.web.util.matcher=INFO
logging.level.org.springframework.security.web.FilterChainProxy=INFO
logging.level.com.wpn=DEBUG


server.servlet.session.timeout=10s

oauth.clientId=${CLIENT_ID:my-trusted-ui}
oauth.clientSecret=${CLIENT_PASSWORD:Passw0rd#}
oauth.introspectionUrl=${INTROSPECTION_URL:http://localhost:8080/oauth/check_token}
security.oauth2.client.client-id= viewpointe
security.oauth2.client.client-secret=+0p$3cr3+

